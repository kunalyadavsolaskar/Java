/*You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

 

Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []*/


class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode pre = new ListNode(0);
        ListNode head = pre;
        List<Integer> numbers = new ArrayList<>();
        for (int i = 0; i < lists.length; i++){
            ListNode node = lists[i];
            while(node != null){
                numbers.add(node.val);
                node = node.next;
            }
        }
        Collections.sort(numbers);
        for (Integer value : numbers) {
            pre.next = new ListNode(value);
            pre = pre.next;
        }
        return head.next;    
    }
    
}